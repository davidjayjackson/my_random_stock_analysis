---
title: "Random Stock Analysis"
format: html
editor: visual
toc: true
---

## International Business Machines (IBM)

```{r, message=FALSE, error=FALSE}
library(quantmod)
library(tidyverse)
library(lubridate)
library(quantmod)
library(dplyr)
library(prophet)
library(ggplot2)

```

### Grab Data

```{r}
#| echo: FALSE
#| message: FALSE
rm (list=ls())
ticker <-"IBM"
getSymbols(ticker,from="2024-01-01")
data_xts <- get(ticker)
max(index(data_xts))

```

### Box Plot Of Closing Prices

```{r}

plot_monthly_boxplot <- function(ticker, start_date = "2024-01-01") {
  
  # Download data
  getSymbols(ticker, from = start_date, auto.assign = TRUE)
  
  # Prepare tidy data
  df <- get(ticker) %>%
    fortify.zoo() %>%
    as_tibble() %>%
    rename(Date = Index, Close = paste0(ticker, ".Close")) %>%
    mutate(
      Month = floor_date(Date, "month"),
      MonthLabel = format(Month, "%b %Y"),
      MonthLabel = factor(MonthLabel, levels = unique(MonthLabel))
    )
  
  # Compute monthly mean
  monthly_mean <- df %>%
    group_by(MonthLabel) %>%
    summarize(MeanClose = mean(Close, na.rm = TRUE))
  
  # Plot
  ggplot(df, aes(x = MonthLabel, y = Close)) +
    geom_boxplot(fill = "skyblue", color = "gray20", outlier.alpha = 0.4) +
    geom_point(
      data = monthly_mean,
      aes(x = MonthLabel, y = MeanClose),
      color = "orange", size = 3
    ) +
    labs(
      title = paste("Monthly Closing Price Distribution for", ticker),
      subtitle = paste("From", start_date, "to", format(max(df$Date), "%Y-%m-%d")),
      x = "Month",
      y = "Closing Price ($)"
    ) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
}

# ðŸ§© Example usage
plot_monthly_boxplot("IBM", start_date = "2025-06-01")
```


### First and Last Close by Month

```{r}
getSymbols(ticker, from = "2025-01-01", auto.assign = TRUE)

# Prepare tidy data
df <- get(ticker) %>%
  fortify.zoo() %>%
  as_tibble() %>%
  rename(Date = Index, Close = paste0(ticker, ".Close")) %>%
  mutate(Month = floor_date(Date, "month"))

# Summarize first/last close for each month
month_summary <- df %>%
  group_by(Month) %>%
  arrange(Date, .by_group = TRUE) %>%
  summarise(
    FirstDate  = first(Date),
    LastDate   = last(Date),
    FirstClose = first(Close),
    LastClose  = last(Close),
    Direction  = ifelse(last(Close) >= first(Close), "Up", "Down"),
    .groups = "drop"
  )

# Pivot longer â†’ 2 rows per month
month_points <- month_summary %>%
  pivot_longer(
    cols = c(FirstDate, LastDate, FirstClose, LastClose),
    names_to = c("Type", ".value"),
    names_pattern = "(First|Last)(.*)"
  ) %>%
  mutate(MonthLabel = format(Month, "%b %Y")) %>%
  mutate(MonthLabel = factor(MonthLabel, levels = rev(unique(MonthLabel))))  # most recent on top

# --- Horizontal plot ---
ggplot(month_points, aes(x = Close, y = MonthLabel, group = Month, color = Direction)) +
  geom_line(size = 1) +
  geom_point(aes(shape = Type), size = 3) +
  scale_shape_manual(values = c(First = 16, Last = 17)) +
  scale_color_manual(values = c(Up = "forestgreen", Down = "firebrick")) +
  labs(
    title = paste("Monthly First â†” Last Closing Prices for", ticker),
    subtitle = "Green = Month ended higher | Red = Month ended lower",
    x = "Closing Price ($)",
    y = "Month"
  ) +
  theme_minimal() +
  theme(
    legend.position = "none",
    axis.text.y = element_text(size = 10)
  )

```

### Bollinger Bands

```{r}
chartSeries(get(ticker),
  type="line", 
  theme=chartTheme('white'),
  name = ticker,
  TA="addBBands()",subset="last 4 months")
```

### Candlesticks/MACD

```{r}
chartSeries(get(ticker),type="candlesticks", 
            theme=chartTheme('white'), 
            subset='last 3 months',name = ticker,
            TA="addMACD()")
```

### 100 Day Moving Average

```{r}
chartSeries(get(ticker),
            type="line", 
            theme=chartTheme('white'),
            TA="addEMA(n=100)",name = ticker)
```

# RSI Plot

```{r}
chartSeries(get(ticker),
            type="line", 
            theme=chartTheme('white'),
            TA="addRSI()",name = ticker,
            subset="last 3 months")
```



### Weekly, Monthly, Quarterly Returns

```{r}
returns <- periodReturn(get(ticker),
             period='weekly',
             subset=NULL,
             type='arithmetic',
             leading=TRUE,name = ticker)
barplot(returns,main="Weekly Returns")
```

```{r}
returns <- periodReturn(get(ticker),
             period='monthly',
             subset=NULL,
             type='log',
             leading=TRUE)
barplot(returns,main="Monthly Returns")
```

```{r}
returns <- periodReturn(get(ticker),
             period='quarterly',
             subset=NULL,
             type='log',
             leading=TRUE)
barplot(returns,main="Quartlerly Returns")
```

### The Prophet Has Sposken (6 Months Data)

```{r}

ticker <- "F"
forecast_start <- as.Date("2025-10-01")
forecast_days  <- 30
display_start  <- as.Date("2025-06-01")

getSymbols(ticker, from = "2025-04-01", auto.assign = TRUE)

df <- get(ticker) %>%
  fortify.zoo() %>%
  as_tibble() %>%
  rename(ds = Index, y = paste0(ticker, ".Close"))

train_data <- df %>% filter(ds < forecast_start)

m <- prophet(train_data)

future <- make_future_dataframe(m, periods = forecast_days)
future <- future %>% filter(ds >= forecast_start)

forecast <- predict(m, future)
recent_history <- df %>% filter(ds >= display_start)

# ðŸ§­ Plot with legend
ggplot() +
  geom_line(data = recent_history, aes(x = ds, y = y, color = "Historical"),linewidth=1) +
  geom_line(data = forecast, aes(x = ds, y = yhat, color = "Forecast"),linewidth=1) +
  geom_ribbon(
    data = forecast,
    aes(x = ds, ymin = yhat_lower, ymax = yhat_upper, fill = "Uncertainty"),
    alpha = 0.2
  ) +
  labs(
    title = paste("Prophet Forecast for", ticker),
    subtitle = paste("30-Day (6 month data) Forecast Beginning", forecast_start),
    x = "Date",
    y = "Closing Price ($)",
    color = "Series",
    fill = "Interval"
  ) +
  scale_color_manual(values = c("Historical" = "darkblue", "Forecast" = "darkred")) +
  scale_fill_manual(values = c("Uncertainty" = "orange")) +
  theme_minimal() +
  theme(
    legend.position = "top",
    legend.title = element_text(face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )
```

### The Prophet Has Sposken (12 Months Data)

```{r}

forecast_start <- as.Date("2025-10-01")
forecast_days  <- 30
display_start  <- as.Date("2025-06-01")

getSymbols(ticker, from = "2024-10-24", auto.assign = TRUE)

df <- get(ticker) %>%
  fortify.zoo() %>%
  as_tibble() %>%
  rename(ds = Index, y = paste0(ticker, ".Close"))

train_data <- df %>% filter(ds < forecast_start)

m <- prophet(train_data)

future <- make_future_dataframe(m, periods = forecast_days)
future <- future %>% filter(ds >= forecast_start)

forecast <- predict(m, future)
recent_history <- df %>% filter(ds >= display_start)

# ðŸ§­ Plot with legend
ggplot() +
  geom_line(data = recent_history, aes(x = ds, y = y, color = "Historical"),linewidth=1) +
  geom_line(data = forecast, aes(x = ds, y = yhat, color = "Forecast"),linewidth=1) +
  geom_ribbon(
    data = forecast,
    aes(x = ds, ymin = yhat_lower, ymax = yhat_upper, fill = "Uncertainty"),
    alpha = 0.2
  ) +
  labs(
    title = paste("Prophet Forecast for", ticker),
    subtitle = paste("30-Day(12 months data) Forecast Beginning", forecast_start),
    x = "Date",
    y = "Closing Price ($)",
    color = "Series",
    fill = "Interval"
  ) +
  scale_color_manual(values = c("Historical" = "darkblue", "Forecast" = "darkred")) +
  scale_fill_manual(values = c("Uncertainty" = "orange")) +
  theme_minimal() +
  theme(
    legend.position = "top",
    legend.title = element_text(face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )
```

### The Prophet Has Sposken (24 Months Data)

```{r}

forecast_start <- as.Date("2025-10-01")
forecast_days  <- 30
display_start  <- as.Date("2025-06-01")

getSymbols(ticker, from = "2023-10-24", auto.assign = TRUE)

df <- get(ticker) %>%
  fortify.zoo() %>%
  as_tibble() %>%
  rename(ds = Index, y = paste0(ticker, ".Close"))

train_data <- df %>% filter(ds < forecast_start)

m <- prophet(train_data)

future <- make_future_dataframe(m, periods = forecast_days)
future <- future %>% filter(ds >= forecast_start)

forecast <- predict(m, future)
recent_history <- df %>% filter(ds >= display_start)

# ðŸ§­ Plot with legend
ggplot() +
  geom_line(data = recent_history, aes(x = ds, y = y, color = "Historical"),linewidth=1) +
  geom_line(data = forecast, aes(x = ds, y = yhat, color = "Forecast"),linewidth=1) +
  geom_ribbon(
    data = forecast,
    aes(x = ds, ymin = yhat_lower, ymax = yhat_upper, fill = "Uncertainty"),
    alpha = 0.2
  ) +
  labs(
    title = paste("Prophet Forecast for", ticker),
    subtitle = paste("30-Day (24 months data) Forecast Beginning", forecast_start),
    x = "Date",
    y = "Closing Price ($)",
    color = "Series",
    fill = "Interval"
  ) +
  scale_color_manual(values = c("Historical" = "darkblue", "Forecast" = "darkred")) +
  scale_fill_manual(values = c("Uncertainty" = "orange")) +
  theme_minimal() +
  theme(
    legend.position = "top",
    legend.title = element_text(face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )
```
